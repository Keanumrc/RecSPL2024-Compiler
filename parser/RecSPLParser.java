public class RecSPLParser {

    public static void parse(String[] tokens) {

        // ----------------------ALL STATES----------------------//

        State s0 = new State(0);
        State s1 = new State(1);
        State s2 = new State(2);
        State s3 = new State(3);
        State s4 = new State(4);
        State s5 = new State(5);
        State s6 = new State(6);
        State s7 = new State(7);
        State s8 = new State(8);
        State s9 = new State(9);
        State s10 = new State(10);
        State s11 = new State(11);
        State s12 = new State(12);
        State s13 = new State(13);
        State s14 = new State(14);
        State s15 = new State(15);
        State s16 = new State(16);
        State s17 = new State(17);
        State s18 = new State(18);
        State s19 = new State(19);
        State s20 = new State(20);
        State s21 = new State(21);
        State s22 = new State(22);
        State s23 = new State(23);
        State s24 = new State(24);
        State s25 = new State(25);
        State s26 = new State(26);
        State s27 = new State(27);
        State s28 = new State(28);
        State s29 = new State(29);
        State s30 = new State(30);
        State s31 = new State(31);
        State s32 = new State(32);
        State s33 = new State(33);
        State s34 = new State(34);
        State s35 = new State(35);
        State s36 = new State(36);
        State s37 = new State(37);
        State s38 = new State(38);
        State s39 = new State(39);
        State s40 = new State(40);
        State s41 = new State(41);
        State s42 = new State(42);
        State s43 = new State(43);
        State s44 = new State(44);
        State s45 = new State(45);
        State s46 = new State(46);
        State s47 = new State(47);
        State s48 = new State(48);
        State s49 = new State(49);
        State s50 = new State(50);
        State s51 = new State(51);
        State s52 = new State(52);
        State s53 = new State(53);
        State s54 = new State(54);
        State s55 = new State(55);
        State s56 = new State(56);
        State s57 = new State(57);
        State s58 = new State(58);
        State s59 = new State(59);
        State s60 = new State(60);
        State s61 = new State(61);
        State s62 = new State(62);
        State s63 = new State(63);
        State s64 = new State(64);
        State s65 = new State(65);
        State s66 = new State(66);
        State s67 = new State(67);
        State s68 = new State(68);
        State s69 = new State(69);
        State s70 = new State(70);
        State s71 = new State(71);
        State s72 = new State(72);
        State s73 = new State(73);
        State s74 = new State(74);
        State s75 = new State(75);
        State s76 = new State(76);
        State s77 = new State(77);
        State s78 = new State(78);
        State s79 = new State(79);
        State s80 = new State(80);
        State s81 = new State(81);
        State s82 = new State(82);
        State s83 = new State(83);
        State s84 = new State(84);
        State s85 = new State(85);
        State s86 = new State(86);
        State s87 = new State(87);
        State s88 = new State(88);
        State s89 = new State(89);
        State s90 = new State(90);
        State s91 = new State(91);
        State s92 = new State(92);
        State s93 = new State(93);
        State s94 = new State(94);
        State s95 = new State(95);
        State s96 = new State(96);
        State s97 = new State(97);
        State s98 = new State(98);
        State s99 = new State(99);
        State s100 = new State(100);
        State s101 = new State(101);
        State s102 = new State(102);
        State s103 = new State(103);
        State s104 = new State(104);
        State s105 = new State(105);
        State s106 = new State(106);
        State s107 = new State(107);
        State s108 = new State(108);
        State s109 = new State(109);
        State s110 = new State(110);
        State s111 = new State(111);
        State s112 = new State(112);
        State s113 = new State(113);
        State s114 = new State(114);
        State s115 = new State(115);
        State s116 = new State(116);
        State s117 = new State(117);
        State s118 = new State(118);
        State s119 = new State(119);
        State s120 = new State(120);
        State s121 = new State(121);
        State s122 = new State(122);
        State s123 = new State(123);
        State s124 = new State(124);
        State s125 = new State(125);
        State s126 = new State(126);

        // ----------------------ALL PRODUCTIONS----------------------//

        Production p0 = new Production("PROG -> main GLOBVARS ALGO FUNCTIONS");
        Production p1 = new Production("GLOBVARS -> ");
        Production p2 = new Production("GLOBVARS -> VTYP VNAME , GLOBVARS");
        Production p3 = new Production("VTYP -> num");
        Production p4 = new Production("VTYP -> text");
        Production p5 = new Production("VNAME -> V");
        Production p6 = new Production("ALGO -> begin INSTRUC end");
        Production p7 = new Production("INSTRUC -> ");
        Production p8 = new Production("INSTRUC -> COMMAND ; INSTRUC");
        Production p9 = new Production("COMMAND -> skip");
        Production p10 = new Production("COMMAND -> halt");
        Production p11 = new Production("COMMAND -> print ATOMIC");
        Production p12 = new Production("COMMAND -> ASSIGN");
        Production p13 = new Production("COMMAND -> CALL");
        Production p14 = new Production("COMMAND -> BRANCH");
        Production p15 = new Production("COMMAND -> return ATOMIC");
        Production p16 = new Production("ATOMIC -> VNAME");
        Production p17 = new Production("ATOMIC -> CONST");
        Production p18 = new Production("CONST -> N");
        Production p19 = new Production("CONST -> T");
        Production p20 = new Production("ASSIGN -> VNAME < input");
        Production p21 = new Production("ASSIGN -> VNAME = TERM");
        Production p22 = new Production("CALL -> FNAME ( ATOMIC , ATOMIC , ATOMIC )");
        Production p23 = new Production("BRANCH -> if COND then ALGO else ALGO");
        Production p24 = new Production("TERM -> ATOMIC");
        Production p25 = new Production("TERM -> CALL");
        Production p26 = new Production("TERM -> OP");
        Production p27 = new Production("OP -> UNOP ( ARG )");
        Production p28 = new Production("OP -> BINOP ( ARG , ARG )");
        Production p29 = new Production("ARG -> ATOMIC");
        Production p30 = new Production("ARG -> OP");
        Production p31 = new Production("COND -> SIMPLE");
        Production p32 = new Production("COND -> COMPOSIT");
        Production p33 = new Production("SIMPLE -> BINOP ( ATOMIC , ATOMIC )");
        Production p34 = new Production("COMPOSIT -> BINOP ( SIMPLE , SIMPLE )");
        Production p35 = new Production("COMPOSIT -> UNOP ( SIMPLE )");
        Production p36 = new Production("UNOP -> not");
        Production p37 = new Production("UNOP -> sqrt");
        Production p38 = new Production("BINOP -> or");
        Production p39 = new Production("BINOP -> and");
        Production p40 = new Production("BINOP -> eq");
        Production p41 = new Production("BINOP -> grt");
        Production p42 = new Production("BINOP -> add");
        Production p43 = new Production("BINOP -> sub");
        Production p44 = new Production("BINOP -> mul");
        Production p45 = new Production("BINOP -> div");
        Production p46 = new Production("FNAME -> F");
        Production p47 = new Production("FUNCTIONS -> ");
        Production p48 = new Production("FUNCTIONS -> DECL FUNCTIONS");
        Production p49 = new Production("DECL -> HEADER BODY");
        Production p50 = new Production("HEADER -> FTYP FNAME ( VNAME , VNAME , VNAME )");
        Production p51 = new Production("FTYP -> num");
        Production p52 = new Production("FTYP -> void");
        Production p53 = new Production("BODY -> PROLOG LOCVARS ALGO EPILOG SUBFUNCS end");
        Production p54 = new Production("PROLOG -> {");
        Production p55 = new Production("EPILOG -> }");
        Production p56 = new Production("LOCVARS -> VTYP VNAME , VTYP VNAME , VTYP VNAME ,");
        Production p57 = new Production("SUBFUNCS -> FUNCTIONS");


        // ----------------------LINK STATES----------------------//

        s0.addTransition("MAIN", new ShiftAction(s1));
        s1.addTransition("NUM", new ShiftAction(s4));
        s1.addTransition("TEXT", new ShiftAction(s5));
        s1.addTransition("BEGIN", new ReduceAction(p1));
        s1.addTransition("GLOBVARS", new GotoAction(s2));
        s1.addTransition("VTYP", new GotoAction(s3));
        s2.addTransition("BEGIN", new ShiftAction(s7));
        s2.addTransition("ALGO", new GotoAction(s6));
        s3.addTransition("V", new ShiftAction(s9));
        s3.addTransition("VNAME", new GotoAction(s8));
        s4.addTransition("V", new ReduceAction(p3));
        s5.addTransition("V", new ReduceAction(p4));
        s6.addTransition("NUM", new ShiftAction(s14));
        s6.addTransition("END", new ReduceAction(p47));
        s6.addTransition("VOID", new ShiftAction(s15));
        s6.addTransition("$", new ReduceAction(p47));
        s6.addTransition("FUNCTIONS", new GotoAction(s10));
        s6.addTransition("DECL", new GotoAction(s11));
        s6.addTransition("HEADER", new GotoAction(s12));
        s6.addTransition("FTYP", new GotoAction(s13));
        s7.addTransition("V", new ShiftAction(s9));
        s7.addTransition("END", new ReduceAction(p7));
        s7.addTransition("SKIP", new ShiftAction(s18));
        s7.addTransition("HALT", new ShiftAction(s19));
        s7.addTransition("PRINT", new ShiftAction(s20));
        s7.addTransition("RETURN", new ShiftAction(s24));
        s7.addTransition("IF", new ShiftAction(s27));
        s7.addTransition("F", new ShiftAction(s28));
        s7.addTransition("VNAME", new GotoAction(s25));
        s7.addTransition("INSTRUC", new GotoAction(s16));
        s7.addTransition("COMMAND", new GotoAction(s17));
        s7.addTransition("ASSIGN", new GotoAction(s21));
        s7.addTransition("CALL", new GotoAction(s22));
        s7.addTransition("BRANCH", new GotoAction(s23));
        s7.addTransition("FNAME", new GotoAction(s26));
        s8.addTransition(",", new ShiftAction(s29));
        s9.addTransition(",", new ReduceAction(p5));
        s9.addTransition(";", new ReduceAction(p5));
        s9.addTransition("<", new ReduceAction(p5));
        s9.addTransition("=", new ReduceAction(p5));
        s9.addTransition(")", new ReduceAction(p5));
        s10.addTransition("$", new AcceptAction());
        s11.addTransition("NUM", new ShiftAction(s14));
        s11.addTransition("END", new ReduceAction(p47));
        s11.addTransition("VOID", new ShiftAction(s15));
        s11.addTransition("$", new ReduceAction(p47));
        s11.addTransition("FUNCTIONS", new GotoAction(s30));
        s11.addTransition("DECL", new GotoAction(s11));
        s11.addTransition("HEADER", new GotoAction(s12));
        s11.addTransition("FTYP", new GotoAction(s13));
        s12.addTransition("{", new ShiftAction(s33));
        s12.addTransition("BODY", new GotoAction(s31));
        s12.addTransition("PROLOG", new GotoAction(s32));
        s13.addTransition("F", new ShiftAction(s28));
        s13.addTransition("FNAME", new GotoAction(s34));
        s14.addTransition("F", new ReduceAction(p51));
        s15.addTransition("F", new ReduceAction(p52));
        s16.addTransition("END", new ShiftAction(s35));
        s17.addTransition(";", new ShiftAction(s36));
        s18.addTransition(";", new ReduceAction(p9));
        s19.addTransition(";", new ReduceAction(p10));
        s20.addTransition("V", new ShiftAction(s9));
        s20.addTransition("N", new ShiftAction(s40));
        s20.addTransition("T", new ShiftAction(s41));
        s20.addTransition("VNAME", new GotoAction(s38));
        s20.addTransition("ATOMIC", new GotoAction(s37));
        s20.addTransition("CONST", new GotoAction(s39));
        s21.addTransition(";", new ReduceAction(p12));
        s22.addTransition(";", new ReduceAction(p13));
        s23.addTransition(";", new ReduceAction(p14));
        s24.addTransition("V", new ShiftAction(s9));
        s24.addTransition("N", new ShiftAction(s40));
        s24.addTransition("T", new ShiftAction(s41));
        s24.addTransition("VNAME", new GotoAction(s38));
        s24.addTransition("ATOMIC", new GotoAction(s42));
        s24.addTransition("CONST", new GotoAction(s39));
        s25.addTransition("<", new ShiftAction(s43));
        s25.addTransition("=", new ShiftAction(s44));
        s26.addTransition("(", new ShiftAction(s45));
        s27.addTransition("NOT", new ShiftAction(s59));
        s27.addTransition("SQRT", new ShiftAction(s60));
        s27.addTransition("OR", new ShiftAction(s51));
        s27.addTransition("AND", new ShiftAction(s52));
        s27.addTransition("EQ", new ShiftAction(s53));
        s27.addTransition("GRT", new ShiftAction(s54));
        s27.addTransition("ADD", new ShiftAction(s55));
        s27.addTransition("SUB", new ShiftAction(s56));
        s27.addTransition("MUL", new ShiftAction(s57));
        s27.addTransition("DIV", new ShiftAction(s58));
        s27.addTransition("COND", new GotoAction(s46));
        s27.addTransition("SIMPLE", new GotoAction(s47));
        s27.addTransition("COMPOSIT", new GotoAction(s48));
        s27.addTransition("UNOP", new GotoAction(s50));
        s27.addTransition("BINOP", new GotoAction(s49));
        s28.addTransition("(", new ReduceAction(p46));
        s29.addTransition("NUM", new ShiftAction(s4));
        s29.addTransition("TEXT", new ShiftAction(s5));
        s29.addTransition("BEGIN", new ReduceAction(p1));
        s29.addTransition("GLOBVARS", new GotoAction(s61));
        s29.addTransition("VTYP", new GotoAction(s3));
        s30.addTransition("END", new ReduceAction(p48));
        s30.addTransition("$", new ReduceAction(p48));
        s31.addTransition("NUM", new ReduceAction(p49));
        s31.addTransition("END", new ReduceAction(p49));
        s31.addTransition("VOID", new ReduceAction(p49));
        s31.addTransition("$", new ReduceAction(p49));
        s32.addTransition("NUM", new ShiftAction(s4));
        s32.addTransition("TEXT", new ShiftAction(s5));
        s32.addTransition("VTYP", new GotoAction(s63));
        s32.addTransition("LOCVARS", new GotoAction(s62));
        s33.addTransition("NUM", new ReduceAction(p54));
        s33.addTransition("TEXT", new ReduceAction(p54));
        s34.addTransition("(", new ShiftAction(s64));
        s35.addTransition("NUM", new ReduceAction(p6));
        s35.addTransition(";", new ReduceAction(p6));
        s35.addTransition("ELSE", new ReduceAction(p6));
        s35.addTransition("VOID", new ReduceAction(p6));
        s35.addTransition("}", new ReduceAction(p6));
        s35.addTransition("$", new ReduceAction(p6));
        s36.addTransition("V", new ShiftAction(s9));
        s36.addTransition("END", new ReduceAction(p7));
        s36.addTransition("SKIP", new ShiftAction(s18));
        s36.addTransition("HALT", new ShiftAction(s19));
        s36.addTransition("PRINT", new ShiftAction(s20));
        s36.addTransition("RETURN", new ShiftAction(s24));
        s36.addTransition("IF", new ShiftAction(s27));
        s36.addTransition("F", new ShiftAction(s28));
        s36.addTransition("VNAME", new GotoAction(s25));
        s36.addTransition("INSTRUC", new GotoAction(s65));
        s36.addTransition("COMMAND", new GotoAction(s17));
        s36.addTransition("ASSIGN", new GotoAction(s21));
        s36.addTransition("CALL", new GotoAction(s22));
        s36.addTransition("BRANCH", new GotoAction(s23));
        s36.addTransition("FNAME", new GotoAction(s26));
        s37.addTransition(";", new ReduceAction(p11));
        s38.addTransition(",", new ReduceAction(p16));
        s38.addTransition(";", new ReduceAction(p16));
        s38.addTransition(")", new ReduceAction(p16));
        s39.addTransition(",", new ReduceAction(p17));
        s39.addTransition(";", new ReduceAction(p17));
        s39.addTransition(")", new ReduceAction(p17));
        s40.addTransition(",", new ReduceAction(p18));
        s40.addTransition(";", new ReduceAction(p18));
        s40.addTransition(")", new ReduceAction(p18));
        s41.addTransition(",", new ReduceAction(p19));
        s41.addTransition(";", new ReduceAction(p19));
        s41.addTransition(")", new ReduceAction(p19));
        s42.addTransition(";", new ReduceAction(p15));
        s43.addTransition("INPUT", new ShiftAction(s66));
        s44.addTransition("V", new ShiftAction(s9));
        s44.addTransition("N", new ShiftAction(s40));
        s44.addTransition("T", new ShiftAction(s41));
        s44.addTransition("NOT", new ShiftAction(s59));
        s44.addTransition("SQRT", new ShiftAction(s60));
        s44.addTransition("OR", new ShiftAction(s51));
        s44.addTransition("AND", new ShiftAction(s52));
        s44.addTransition("EQ", new ShiftAction(s53));
        s44.addTransition("GRT", new ShiftAction(s54));
        s44.addTransition("ADD", new ShiftAction(s55));
        s44.addTransition("SUB", new ShiftAction(s56));
        s44.addTransition("MUL", new ShiftAction(s57));
        s44.addTransition("DIV", new ShiftAction(s58));
        s44.addTransition("F", new ShiftAction(s28));
        s44.addTransition("VNAME", new GotoAction(s38));
        s44.addTransition("ATOMIC", new GotoAction(s68));
        s44.addTransition("CONST", new GotoAction(s39));
        s44.addTransition("CALL", new GotoAction(s69));
        s44.addTransition("TERM", new GotoAction(s67));
        s44.addTransition("OP", new GotoAction(s70));
        s44.addTransition("UNOP", new GotoAction(s71));
        s44.addTransition("BINOP", new GotoAction(s72));
        s44.addTransition("FNAME", new GotoAction(s26));
        s45.addTransition("V", new ShiftAction(s9));
        s45.addTransition("N", new ShiftAction(s40));
        s45.addTransition("T", new ShiftAction(s41));
        s45.addTransition("VNAME", new GotoAction(s38));
        s45.addTransition("ATOMIC", new GotoAction(s73));
        s45.addTransition("CONST", new GotoAction(s39));
        s46.addTransition("THEN", new ShiftAction(s74));
        s47.addTransition("THEN", new ReduceAction(p31));
        s48.addTransition("THEN", new ReduceAction(p32));
        s49.addTransition("(", new ShiftAction(s75));
        s50.addTransition("(", new ShiftAction(s76));
        s51.addTransition("(", new ReduceAction(p38));
        s52.addTransition("(", new ReduceAction(p39));
        s53.addTransition("(", new ReduceAction(p40));
        s54.addTransition("(", new ReduceAction(p41));
        s55.addTransition("(", new ReduceAction(p42));
        s56.addTransition("(", new ReduceAction(p43));
        s57.addTransition("(", new ReduceAction(p44));
        s58.addTransition("(", new ReduceAction(p45));
        s59.addTransition("(", new ReduceAction(p36));
        s60.addTransition("(", new ReduceAction(p37));
        s61.addTransition("BEGIN", new ReduceAction(p2));
        s62.addTransition("BEGIN", new ShiftAction(s7));
        s62.addTransition("ALGO", new GotoAction(s77));
        s63.addTransition("V", new ShiftAction(s9));
        s63.addTransition("VNAME", new GotoAction(s78));
        s64.addTransition("V", new ShiftAction(s9));
        s64.addTransition("VNAME", new GotoAction(s79));
        s65.addTransition("END", new ReduceAction(p8));
        s66.addTransition(";", new ReduceAction(p20));
        s67.addTransition(";", new ReduceAction(p21));
        s68.addTransition(";", new ReduceAction(p24));
        s69.addTransition(";", new ReduceAction(p25));
        s70.addTransition(";", new ReduceAction(p26));
        s71.addTransition("(", new ShiftAction(s80));
        s72.addTransition("(", new ShiftAction(s81));
        s73.addTransition(",", new ShiftAction(s82));
        s74.addTransition("BEGIN", new ShiftAction(s7));
        s74.addTransition("ALGO", new GotoAction(s83));
        s75.addTransition("V", new ShiftAction(s9));
        s75.addTransition("N", new ShiftAction(s40));
        s75.addTransition("T", new ShiftAction(s41));
        s75.addTransition("OR", new ShiftAction(s51));
        s75.addTransition("AND", new ShiftAction(s52));
        s75.addTransition("EQ", new ShiftAction(s53));
        s75.addTransition("GRT", new ShiftAction(s54));
        s75.addTransition("ADD", new ShiftAction(s55));
        s75.addTransition("SUB", new ShiftAction(s56));
        s75.addTransition("MUL", new ShiftAction(s57));
        s75.addTransition("DIV", new ShiftAction(s58));
        s75.addTransition("VNAME", new GotoAction(s38));
        s75.addTransition("ATOMIC", new GotoAction(s84));
        s75.addTransition("CONST", new GotoAction(s39));
        s75.addTransition("SIMPLE", new GotoAction(s85));
        s75.addTransition("BINOP", new GotoAction(s86));
        s76.addTransition("OR", new ShiftAction(s51));
        s76.addTransition("AND", new ShiftAction(s52));
        s76.addTransition("EQ", new ShiftAction(s53));
        s76.addTransition("GRT", new ShiftAction(s54));
        s76.addTransition("ADD", new ShiftAction(s55));
        s76.addTransition("SUB", new ShiftAction(s56));
        s76.addTransition("MUL", new ShiftAction(s57));
        s76.addTransition("DIV", new ShiftAction(s58));
        s76.addTransition("SIMPLE", new GotoAction(s87));
        s76.addTransition("BINOP", new GotoAction(s86));
        s77.addTransition("}", new ShiftAction(s89));
        s77.addTransition("EPILOG", new GotoAction(s88));
        s78.addTransition(",", new ShiftAction(s90));
        s79.addTransition(",", new ShiftAction(s91));
        s80.addTransition("V", new ShiftAction(s9));
        s80.addTransition("N", new ShiftAction(s40));
        s80.addTransition("T", new ShiftAction(s41));
        s80.addTransition("NOT", new ShiftAction(s59));
        s80.addTransition("SQRT", new ShiftAction(s60));
        s80.addTransition("OR", new ShiftAction(s51));
        s80.addTransition("AND", new ShiftAction(s52));
        s80.addTransition("EQ", new ShiftAction(s53));
        s80.addTransition("GRT", new ShiftAction(s54));
        s80.addTransition("ADD", new ShiftAction(s55));
        s80.addTransition("SUB", new ShiftAction(s56));
        s80.addTransition("MUL", new ShiftAction(s57));
        s80.addTransition("DIV", new ShiftAction(s58));
        s80.addTransition("VNAME", new GotoAction(s38));
        s80.addTransition("ATOMIC", new GotoAction(s93));
        s80.addTransition("CONST", new GotoAction(s39));
        s80.addTransition("OP", new GotoAction(s94));
        s80.addTransition("ARG", new GotoAction(s92));
        s80.addTransition("UNOP", new GotoAction(s71));
        s80.addTransition("BINOP", new GotoAction(s72));
        s81.addTransition("V", new ShiftAction(s9));
        s81.addTransition("N", new ShiftAction(s40));
        s81.addTransition("T", new ShiftAction(s41));
        s81.addTransition("NOT", new ShiftAction(s59));
        s81.addTransition("SQRT", new ShiftAction(s60));
        s81.addTransition("OR", new ShiftAction(s51));
        s81.addTransition("AND", new ShiftAction(s52));
        s81.addTransition("EQ", new ShiftAction(s53));
        s81.addTransition("GRT", new ShiftAction(s54));
        s81.addTransition("ADD", new ShiftAction(s55));
        s81.addTransition("SUB", new ShiftAction(s56));
        s81.addTransition("MUL", new ShiftAction(s57));
        s81.addTransition("DIV", new ShiftAction(s58));
        s81.addTransition("VNAME", new GotoAction(s38));
        s81.addTransition("ATOMIC", new GotoAction(s93));
        s81.addTransition("CONST", new GotoAction(s39));
        s81.addTransition("OP", new GotoAction(s94));
        s81.addTransition("ARG", new GotoAction(s95));
        s81.addTransition("UNOP", new GotoAction(s71));
        s81.addTransition("BINOP", new GotoAction(s72));
        s82.addTransition("V", new ShiftAction(s9));
        s82.addTransition("N", new ShiftAction(s40));
        s82.addTransition("T", new ShiftAction(s41));
        s82.addTransition("VNAME", new GotoAction(s38));
        s82.addTransition("ATOMIC", new GotoAction(s96));
        s82.addTransition("CONST", new GotoAction(s39));
        s83.addTransition("ELSE", new ShiftAction(s97));
        s84.addTransition(",", new ShiftAction(s98));
        s85.addTransition(",", new ShiftAction(s99));
        s86.addTransition("(", new ShiftAction(s100));
        s87.addTransition(")", new ShiftAction(s101));
        s88.addTransition("NUM", new ShiftAction(s14));
        s88.addTransition("END", new ReduceAction(p47));
        s88.addTransition("VOID", new ShiftAction(s15));
        s88.addTransition("$", new ReduceAction(p47));
        s88.addTransition("FUNCTIONS", new GotoAction(s103));
        s88.addTransition("DECL", new GotoAction(s11));
        s88.addTransition("HEADER", new GotoAction(s12));
        s88.addTransition("FTYP", new GotoAction(s13));
        s88.addTransition("SUBFUNCS", new GotoAction(s102));
        s89.addTransition("NUM", new ReduceAction(p55));
        s89.addTransition("END", new ReduceAction(p55));
        s89.addTransition("VOID", new ReduceAction(p55));
        s89.addTransition("$", new ReduceAction(p55));
        s90.addTransition("NUM", new ShiftAction(s4));
        s90.addTransition("TEXT", new ShiftAction(s5));
        s90.addTransition("VTYP", new GotoAction(s104));
        s91.addTransition("V", new ShiftAction(s9));
        s91.addTransition("VNAME", new GotoAction(s105));
        s92.addTransition(")", new ShiftAction(s106));
        s93.addTransition(",", new ReduceAction(p29));
        s93.addTransition(")", new ReduceAction(p29));
        s94.addTransition(",", new ReduceAction(p30));
        s94.addTransition(")", new ReduceAction(p30));
        s95.addTransition(",", new ShiftAction(s107));
        s96.addTransition(",", new ShiftAction(s108));
        s97.addTransition("BEGIN", new ShiftAction(s7));
        s97.addTransition("ALGO", new GotoAction(s109));
        s98.addTransition("V", new ShiftAction(s9));
        s98.addTransition("N", new ShiftAction(s40));
        s98.addTransition("T", new ShiftAction(s41));
        s98.addTransition("VNAME", new GotoAction(s38));
        s98.addTransition("ATOMIC", new GotoAction(s110));
        s98.addTransition("CONST", new GotoAction(s39));
        s99.addTransition("OR", new ShiftAction(s51));
        s99.addTransition("AND", new ShiftAction(s52));
        s99.addTransition("EQ", new ShiftAction(s53));
        s99.addTransition("GRT", new ShiftAction(s54));
        s99.addTransition("ADD", new ShiftAction(s55));
        s99.addTransition("SUB", new ShiftAction(s56));
        s99.addTransition("MUL", new ShiftAction(s57));
        s99.addTransition("DIV", new ShiftAction(s58));
        s99.addTransition("SIMPLE", new GotoAction(s111));
        s99.addTransition("BINOP", new GotoAction(s86));
        s100.addTransition("V", new ShiftAction(s9));
        s100.addTransition("N", new ShiftAction(s40));
        s100.addTransition("T", new ShiftAction(s41));
        s100.addTransition("VNAME", new GotoAction(s38));
        s100.addTransition("ATOMIC", new GotoAction(s84));
        s100.addTransition("CONST", new GotoAction(s39));
        s101.addTransition("THEN", new ReduceAction(p35));
        s102.addTransition("END", new ShiftAction(s112));
        s103.addTransition("END", new ReduceAction(p57));
        s104.addTransition("V", new ShiftAction(s9));
        s104.addTransition("VNAME", new GotoAction(s113));
        s105.addTransition(",", new ShiftAction(s114));
        s106.addTransition(",", new ReduceAction(p27));
        s106.addTransition(";", new ReduceAction(p27));
        s106.addTransition(")", new ReduceAction(p27));
        s107.addTransition("V", new ShiftAction(s9));
        s107.addTransition("N", new ShiftAction(s40));
        s107.addTransition("T", new ShiftAction(s41));
        s107.addTransition("NOT", new ShiftAction(s59));
        s107.addTransition("SQRT", new ShiftAction(s60));
        s107.addTransition("OR", new ShiftAction(s51));
        s107.addTransition("AND", new ShiftAction(s52));
        s107.addTransition("EQ", new ShiftAction(s53));
        s107.addTransition("GRT", new ShiftAction(s54));
        s107.addTransition("ADD", new ShiftAction(s55));
        s107.addTransition("SUB", new ShiftAction(s56));
        s107.addTransition("MUL", new ShiftAction(s57));
        s107.addTransition("DIV", new ShiftAction(s58));
        s107.addTransition("VNAME", new GotoAction(s38));
        s107.addTransition("ATOMIC", new GotoAction(s93));
        s107.addTransition("CONST", new GotoAction(s39));
        s107.addTransition("OP", new GotoAction(s94));
        s107.addTransition("ARG", new GotoAction(s115));
        s107.addTransition("UNOP", new GotoAction(s71));
        s107.addTransition("BINOP", new GotoAction(s72));
        s108.addTransition("V", new ShiftAction(s9));
        s108.addTransition("N", new ShiftAction(s40));
        s108.addTransition("T", new ShiftAction(s41));
        s108.addTransition("VNAME", new GotoAction(s38));
        s108.addTransition("ATOMIC", new GotoAction(s116));
        s108.addTransition("CONST", new GotoAction(s39));
        s109.addTransition(";", new ReduceAction(p23));
        s110.addTransition(")", new ShiftAction(s117));
        s111.addTransition(")", new ShiftAction(s118));
        s112.addTransition("NUM", new ReduceAction(p53));
        s112.addTransition("END", new ReduceAction(p53));
        s112.addTransition("VOID", new ReduceAction(p53));
        s112.addTransition("$", new ReduceAction(p53));
        s113.addTransition(",", new ShiftAction(s119));
        s114.addTransition("V", new ShiftAction(s9));
        s114.addTransition("VNAME", new GotoAction(s120));
        s115.addTransition(")", new ShiftAction(s121));
        s116.addTransition(")", new ShiftAction(s122));
        s117.addTransition(",", new ReduceAction(p33));
        s117.addTransition(")", new ReduceAction(p33));
        s117.addTransition("THEN", new ReduceAction(p33));
        s118.addTransition("THEN", new ReduceAction(p34));
        s119.addTransition("NUM", new ShiftAction(s4));
        s119.addTransition("TEXT", new ShiftAction(s5));
        s119.addTransition("VTYP", new GotoAction(s123));
        s120.addTransition(")", new ShiftAction(s124));
        s121.addTransition(",", new ReduceAction(p28));
        s121.addTransition(";", new ReduceAction(p28));
        s121.addTransition(")", new ReduceAction(p28));
        s122.addTransition(";", new ReduceAction(p22));
        s123.addTransition("V", new ShiftAction(s9));
        s123.addTransition("VNAME", new GotoAction(s125));
        s124.addTransition("{", new ReduceAction(p50));
        s125.addTransition(",", new ShiftAction(s126));
        s126.addTransition("BEGIN", new ReduceAction(p56));

        Parser parser = new Parser(s0);

        parser.parse(tokens);

    }

}