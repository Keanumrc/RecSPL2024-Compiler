<compositeNode>
<nonTerminal>PROG</nonTerminal>
<leafNode>
<tokenClass>MAIN</tokenClass>
<word>main</word>
</leafNode>
<compositeNode>
<nonTerminal>GLOBVARS</nonTerminal>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy1</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>GLOBVARS</nonTerminal>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy2</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>GLOBVARS</nonTerminal>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy4</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>GLOBVARS</nonTerminal>
</compositeNode>
</compositeNode>
</compositeNode>
</compositeNode>
<compositeNode>
<nonTerminal>ALGO</nonTerminal>
<leafNode>
<tokenClass>BEGIN</tokenClass>
<word>begin</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
<compositeNode>
<nonTerminal>COMMAND</nonTerminal>
<compositeNode>
<nonTerminal>CALL</nonTerminal>
<compositeNode>
<nonTerminal>FNAME</nonTerminal>
<leafNode>
<tokenClass>F</tokenClass>
<word>F_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>LEFT_PARENTHESIS</tokenClass>
<word>(</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>RIGHT_PARENTHESIS</tokenClass>
<word>)</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>SEMICOLON</tokenClass>
<word>;</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
<compositeNode>
<nonTerminal>COMMAND</nonTerminal>
<compositeNode>
<nonTerminal>CALL</nonTerminal>
<compositeNode>
<nonTerminal>FNAME</nonTerminal>
<leafNode>
<tokenClass>F</tokenClass>
<word>F_two</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>LEFT_PARENTHESIS</tokenClass>
<word>(</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>RIGHT_PARENTHESIS</tokenClass>
<word>)</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>SEMICOLON</tokenClass>
<word>;</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
</compositeNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
<compositeNode>
<nonTerminal>DECL</nonTerminal>
<compositeNode>
<nonTerminal>HEADER</nonTerminal>
<compositeNode>
<nonTerminal>FTYP</nonTerminal>
<leafNode>
<tokenClass>VOID</tokenClass>
<word>void</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>FNAME</nonTerminal>
<leafNode>
<tokenClass>F</tokenClass>
<word>F_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>LEFT_PARENTHESIS</tokenClass>
<word>(</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_two</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_three</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>RIGHT_PARENTHESIS</tokenClass>
<word>)</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>BODY</nonTerminal>
<compositeNode>
<nonTerminal>PROLOG</nonTerminal>
<leafNode>
<tokenClass>LEFT_BRACE</tokenClass>
<word>{</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>LOCVARS</nonTerminal>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy1</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy2</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy3</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>ALGO</nonTerminal>
<leafNode>
<tokenClass>BEGIN</tokenClass>
<word>begin</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
<compositeNode>
<nonTerminal>COMMAND</nonTerminal>
<compositeNode>
<nonTerminal>CALL</nonTerminal>
<compositeNode>
<nonTerminal>FNAME</nonTerminal>
<leafNode>
<tokenClass>F</tokenClass>
<word>F_one2</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>LEFT_PARENTHESIS</tokenClass>
<word>(</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>RIGHT_PARENTHESIS</tokenClass>
<word>)</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>SEMICOLON</tokenClass>
<word>;</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>EPILOG</nonTerminal>
<leafNode>
<tokenClass>RIGHT_BRACE</tokenClass>
<word>}</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>SUBFUNCS</nonTerminal>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
<compositeNode>
<nonTerminal>DECL</nonTerminal>
<compositeNode>
<nonTerminal>HEADER</nonTerminal>
<compositeNode>
<nonTerminal>FTYP</nonTerminal>
<leafNode>
<tokenClass>VOID</tokenClass>
<word>void</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>FNAME</nonTerminal>
<leafNode>
<tokenClass>F</tokenClass>
<word>F_one2</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>LEFT_PARENTHESIS</tokenClass>
<word>(</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_two</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_three</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>RIGHT_PARENTHESIS</tokenClass>
<word>)</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>BODY</nonTerminal>
<compositeNode>
<nonTerminal>PROLOG</nonTerminal>
<leafNode>
<tokenClass>LEFT_BRACE</tokenClass>
<word>{</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>LOCVARS</nonTerminal>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy1</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy2</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy3</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>ALGO</nonTerminal>
<leafNode>
<tokenClass>BEGIN</tokenClass>
<word>begin</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
<compositeNode>
<nonTerminal>COMMAND</nonTerminal>
<compositeNode>
<nonTerminal>CALL</nonTerminal>
<compositeNode>
<nonTerminal>FNAME</nonTerminal>
<leafNode>
<tokenClass>F</tokenClass>
<word>F_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>LEFT_PARENTHESIS</tokenClass>
<word>(</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy4</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>RIGHT_PARENTHESIS</tokenClass>
<word>)</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>SEMICOLON</tokenClass>
<word>;</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>EPILOG</nonTerminal>
<leafNode>
<tokenClass>RIGHT_BRACE</tokenClass>
<word>}</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>SUBFUNCS</nonTerminal>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
<compositeNode>
<nonTerminal>DECL</nonTerminal>
<compositeNode>
<nonTerminal>HEADER</nonTerminal>
<compositeNode>
<nonTerminal>FTYP</nonTerminal>
<leafNode>
<tokenClass>VOID</tokenClass>
<word>void</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>FNAME</nonTerminal>
<leafNode>
<tokenClass>F</tokenClass>
<word>F_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>LEFT_PARENTHESIS</tokenClass>
<word>(</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_two</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_three</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>RIGHT_PARENTHESIS</tokenClass>
<word>)</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>BODY</nonTerminal>
<compositeNode>
<nonTerminal>PROLOG</nonTerminal>
<leafNode>
<tokenClass>LEFT_BRACE</tokenClass>
<word>{</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>LOCVARS</nonTerminal>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy1</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy2</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy3</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>ALGO</nonTerminal>
<leafNode>
<tokenClass>BEGIN</tokenClass>
<word>begin</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
<compositeNode>
<nonTerminal>COMMAND</nonTerminal>
<leafNode>
<tokenClass>SKIP</tokenClass>
<word>skip</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>SEMICOLON</tokenClass>
<word>;</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>EPILOG</nonTerminal>
<leafNode>
<tokenClass>RIGHT_BRACE</tokenClass>
<word>}</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>SUBFUNCS</nonTerminal>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
</compositeNode>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
</compositeNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
</compositeNode>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
</compositeNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
</compositeNode>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
<compositeNode>
<nonTerminal>DECL</nonTerminal>
<compositeNode>
<nonTerminal>HEADER</nonTerminal>
<compositeNode>
<nonTerminal>FTYP</nonTerminal>
<leafNode>
<tokenClass>VOID</tokenClass>
<word>void</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>FNAME</nonTerminal>
<leafNode>
<tokenClass>F</tokenClass>
<word>F_two</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>LEFT_PARENTHESIS</tokenClass>
<word>(</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_two</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_three</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>RIGHT_PARENTHESIS</tokenClass>
<word>)</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>BODY</nonTerminal>
<compositeNode>
<nonTerminal>PROLOG</nonTerminal>
<leafNode>
<tokenClass>LEFT_BRACE</tokenClass>
<word>{</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>LOCVARS</nonTerminal>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy1</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy2</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy3</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>ALGO</nonTerminal>
<leafNode>
<tokenClass>BEGIN</tokenClass>
<word>begin</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
<compositeNode>
<nonTerminal>COMMAND</nonTerminal>
<compositeNode>
<nonTerminal>CALL</nonTerminal>
<compositeNode>
<nonTerminal>FNAME</nonTerminal>
<leafNode>
<tokenClass>F</tokenClass>
<word>F_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>LEFT_PARENTHESIS</tokenClass>
<word>(</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>ATOMIC</nonTerminal>
<compositeNode>
<nonTerminal>CONST</nonTerminal>
<leafNode>
<tokenClass>N</tokenClass>
<word>0</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>RIGHT_PARENTHESIS</tokenClass>
<word>)</word>
</leafNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>SEMICOLON</tokenClass>
<word>;</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>EPILOG</nonTerminal>
<leafNode>
<tokenClass>RIGHT_BRACE</tokenClass>
<word>}</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>SUBFUNCS</nonTerminal>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
<compositeNode>
<nonTerminal>DECL</nonTerminal>
<compositeNode>
<nonTerminal>HEADER</nonTerminal>
<compositeNode>
<nonTerminal>FTYP</nonTerminal>
<leafNode>
<tokenClass>VOID</tokenClass>
<word>void</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>FNAME</nonTerminal>
<leafNode>
<tokenClass>F</tokenClass>
<word>F_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>LEFT_PARENTHESIS</tokenClass>
<word>(</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_one</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_two</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_three</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>RIGHT_PARENTHESIS</tokenClass>
<word>)</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>BODY</nonTerminal>
<compositeNode>
<nonTerminal>PROLOG</nonTerminal>
<leafNode>
<tokenClass>LEFT_BRACE</tokenClass>
<word>{</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>LOCVARS</nonTerminal>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy1</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy2</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
<compositeNode>
<nonTerminal>VTYP</nonTerminal>
<leafNode>
<tokenClass>NUM</tokenClass>
<word>num</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>VNAME</nonTerminal>
<leafNode>
<tokenClass>V</tokenClass>
<word>V_dummy3</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>COMMA</tokenClass>
<word>,</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>ALGO</nonTerminal>
<leafNode>
<tokenClass>BEGIN</tokenClass>
<word>begin</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
<compositeNode>
<nonTerminal>COMMAND</nonTerminal>
<leafNode>
<tokenClass>SKIP</tokenClass>
<word>skip</word>
</leafNode>
</compositeNode>
<leafNode>
<tokenClass>SEMICOLON</tokenClass>
<word>;</word>
</leafNode>
<compositeNode>
<nonTerminal>INSTRUC</nonTerminal>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>EPILOG</nonTerminal>
<leafNode>
<tokenClass>RIGHT_BRACE</tokenClass>
<word>}</word>
</leafNode>
</compositeNode>
<compositeNode>
<nonTerminal>SUBFUNCS</nonTerminal>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
</compositeNode>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
</compositeNode>
</compositeNode>
</compositeNode>
<leafNode>
<tokenClass>END</tokenClass>
<word>end</word>
</leafNode>
</compositeNode>
</compositeNode>
<compositeNode>
<nonTerminal>FUNCTIONS</nonTerminal>
</compositeNode>
</compositeNode>
</compositeNode>
</compositeNode>
